ENV['VAGRANT_NO_PARALLEL'] = 'yes'

# k3s master ip
master_ip = "192.168.56.6"

# to set the disk size:
# >> vagrant plugin install vagrant-disksize

Vagrant.configure("2") do |config|

  # configure free5gc vm
  config.vm.define "hydrogen" do |h|
    # warning: check always if the version of Ubuntu is at end of live...
    h.vm.box = "bento/ubuntu-20.04"
    h.vm.hostname = 'hydrogen'
    h.disksize.size = '60GB'
    #h.vm.box_url = "ubuntu/precise64"

    # to create a private network with the name intnet-1, auto-config false because we will set the IPs and the network by ourself
    h.vm.network "private_network", virtualbox__intnet: "intnet-1", auto_config: false

    h.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 8192]
      v.customize ["modifyvm", :id, "--name", "hydrogen"]
      v.cpus = 8
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-vms"]
    end

    # to provide files and shell script, we need to act on the Vagrantfile giving the local path and the future path on the vagrant machine
    h.vm.provision "file", source: "daemon.json", destination: "daemon.json"
    h.vm.provision "shell" , path: "provision-free5g.sh"

    # to share the directory where the repo is set in (passing the local path and the future path in the vagrant machine)
    h.vm.synced_folder "../../Customer-Edge-Switch", "/home/vagrant/Customer-Edge-Switch"

  end

  # configure k3s master
  config.vm.define "helium" do |h|
    # warning: check always if the version of Ubuntu is at end of live...
    h.vm.box = "bento/ubuntu-20.04"
    h.vm.hostname = 'helium'
    #h.disksize.size = '50GB'
    #h.vm.box_url = "ubuntu/precise64"

    # to create a private network with the name intnet-2, auto-config false because we will set the IPs and the network by ourself
    h.vm.network "private_network", virtualbox__intnet: "intnet-2", auto_config: false

    h.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 2048]
      v.customize ["modifyvm", :id, "--name", "helium"]
      v.cpus = 4
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-vms"]
    end
    
    # to share the directory where the repo is set in (passing the local path and the future path in the vagrant machine)
    h.vm.synced_folder "../../Customer-Edge-Switch", "/home/vagrant/Customer-Edge-Switch"
  end

end

# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = "bento/ubuntu-20.04"

  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.hostname = "p4"
  
  config.vm.define "dev", autostart: false do |dev|

    dev.vm.provider "virtualbox" do |v|
      v.name = "P4 Tutorial Development" + Time.now.strftime(" %Y-%m-%d")

    end

    dev.vm.provision "file", source: "py3localpath.py", destination: "/home/vagrant/py3localpath.py"
    dev.vm.provision "shell", inline: "chmod 755 /home/vagrant/py3localpath.py"
    dev.vm.provision "file", source: "patches/disable-Wno-error-and-other-small-changes.diff", destination: "/home/vagrant/patches/disable-Wno-error-and-other-small-changes.diff"
    dev.vm.provision "file", source: "patches/behavioral-model-use-correct-libssl-pkg.patch", destination: "/home/vagrant/patches/behavioral-model-use-correct-libssl-pkg.patch"
    dev.vm.provision "file", source: "patches/mininet-dont-install-python2.patch", destination: "/home/vagrant/patches/mininet-dont-install-python2.patch"
    dev.vm.provision "file", source: "clean.sh", destination: "/home/vagrant/clean.sh"
    dev.vm.provision "shell", inline: "chmod 755 /home/vagrant/clean.sh"
    dev.vm.provision "shell", path: "root-dev-bootstrap.sh"
    dev.vm.provision "shell", path: "root-common-bootstrap.sh"
    dev.vm.provision "shell", privileged: false, path: "user-dev-bootstrap.sh"
    dev.vm.provision "shell", privileged: false, path: "user-common-bootstrap.sh"

  end


  config.vm.define "release", primary: true do |bmv2|

    # to set a private network with an ip and a netmask
    # bmv2.vm.network :private_network, ip: "192.168.56.2", netmask:"255.255.255.252" #\30
    

    # to create a private network with the name intnet-1, auto-config false because we will set the IPs and the network by ourself
    bmv2.vm.network "private_network", virtualbox__intnet: "intnet-1", auto_config: false
    
    # to create a private network with the name intnet-2, auto-config false because we will set the IPs and the network by ourself
    bmv2.vm.network "private_network", virtualbox__intnet: "intnet-2", auto_config: false


    bmv2.vm.provider "virtualbox" do |v|
      v.name = "P4 Tutorial Release" + Time.now.strftime(" %Y-%m-%d")

      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-vms"]
      v.customize ["modifyvm", :id, "--nicpromisc3", "allow-vms"]

    end
     
    # to provide files and shell script, we need to act on the Vagrantfile giving the local path and the future path on the vagrant machine
    bmv2.vm.provision "file", source: "p4_16-mode.el", destination: "p4_16-mode.el"
    bmv2.vm.provision "file", source: "p4.vim", destination: "p4.vim"
    bmv2.vm.provision "shell", path: "root-release-bootstrap.sh"
    bmv2.vm.provision "shell", path: "root-common-bootstrap.sh"
    bmv2.vm.provision "shell", privileged: false, path: "user-common-bootstrap.sh"
  
    # to share the directory where the repo is set in (passing the local path and the future path in the vagrant machine)
    bmv2.vm.synced_folder "../../Customer-Edge-Switch", "/home/vagrant/Customer-Edge-Switch"

  end

  config.vm.provider "virtualbox" do |vb|
    #vb.gui = true
    vb.memory = 2048
    vb.cpus = 2
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
    vb.customize [
      "storageattach", :id,
      "--storagectl", "IDE Controller",
      "--port", "0",
      "--device", "0",
      "--type", "dvddrive",
      "--medium", "emptydrive"
    ]
    vb.customize ["modifyvm", :id, "--vram", "32"]

  end

end
